timeout: "1800s"

steps:
  # 1) Build
  - name: gcr.io/cloud-builders/docker
    id: Build Image
    args: [
      "build","-t","europe-west6-docker.pkg.dev/$PROJECT_ID/foodbot/foodbot:$COMMIT_SHA","."
    ]

  # 2) Push
  - name: gcr.io/cloud-builders/docker
    id: Push Image
    args: [
      "push","europe-west6-docker.pkg.dev/$PROJECT_ID/foodbot/foodbot:$COMMIT_SHA"
    ]

  # 3) Deploy ohne Traffic (keine Tags)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: Deploy 0%
    args: [
      "run","deploy","foodbot",
      "--region=europe-west6",
      "--image=europe-west6-docker.pkg.dev/$PROJECT_ID/foodbot/foodbot:$COMMIT_SHA",
      "--no-traffic",
      "--port=8080",
      "--allow-unauthenticated",
      "--set-secrets=TELEGRAM_API_KEY=TELEGRAM_API_KEY:latest,OPENAI_API_KEY=OPENAI_API_KEY:latest,GITHUB_TOKEN=GITHUB_TOKEN:latest,TELEGRAM_WEBHOOK_SECRET=TELEGRAM_WEBHOOK_SECRET:latest,GOOGLE_CRED_JSON=GOOGLE_CRED_JSON:latest",
      "--quiet"
    ]

  # 4) Ready-Polling (JSON-frei), Health-Check, dann 100% Traffic
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: Ready + Health + Traffic
    entrypoint: bash
    args:
      - "-c"
      - >
        set -euo pipefail;
        region=europe-west6; service=foodbot;
        cand="$(gcloud run services describe "$service" --region "$region" --format='value(status.latestCreatedRevisionName)')";
        test -n "$cand" || { echo "‚ùå no candidate revision"; exit 10; }
        echo "candidate: $cand";
        for i in $(seq 1 80); do
          ready="$(gcloud run revisions describe "$cand" --region "$region" --format='value(status.conditions[?type=Ready].status)')";
          printf '  [%02d/80] Ready=%s\n' "$i" "${ready:-?}";
          [ "$ready" = "True" ] && break;
          sleep 6;
        done;
        [ "$ready" = "True" ] || { 
          echo "üìú recent logs for $cand:";
          gcloud logging read "resource.type=cloud_run_revision AND resource.labels.service_name=$service AND resource.labels.revision_name=$cand" --limit=100 --order=desc --format='value(textPayload)' || true;
          echo "‚ùå Ready not reached"; exit 21; 
        }
        rev_url="$(gcloud run revisions describe "$cand" --region "$region" --format='value(status.url,status.address.url)' | tr ' ' '\n' | head -n1)";
        test -n "$rev_url" || { echo "‚ùå no revision url"; exit 23; }
        echo "ü©∫ GET ${rev_url%/}/webhook/health";
        code="$(curl -sS -m 15 -o /dev/null -w '%{http_code}' "${rev_url%/}/webhook/health" || echo 000)";
        echo "‚Üí HTTP $code";
        [ "$code" = 200 ] || { echo "‚ùå health != 200"; exit 22; }
        gcloud run services update-traffic "$service" --region "$region" --to-revisions "$cand=100";
        echo "‚úÖ Traffic 100% auf $cand";

images:
  - "europe-west6-docker.pkg.dev/$PROJECT_ID/foodbot/foodbot:$COMMIT_SHA"
